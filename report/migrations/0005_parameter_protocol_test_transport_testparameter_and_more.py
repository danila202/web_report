# Generated by Django 4.2.8 on 2023-12-09 16:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("report", "0004_element_elementmaterialfence_fence_marking_material_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Parameter",
            fields=[
                (
                    "name",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
                ("unit_of_measurement", models.CharField(max_length=20)),
                ("value_norm_from", models.FloatField()),
                ("value_norm_before", models.FloatField()),
            ],
            options={
                "db_table": "параметр",
            },
        ),
        migrations.CreateModel(
            name="Protocol",
            fields=[
                (
                    "id",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                ("data", models.DateField()),
                ("performer", models.CharField(max_length=50)),
                ("kind", models.CharField(max_length=25)),
                ("name_file", models.FileField(upload_to="pdf_report")),
                (
                    "fence",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="report.fence"
                    ),
                ),
            ],
            options={
                "db_table": "протокол",
            },
        ),
        migrations.CreateModel(
            name="Test",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data_start", models.DateField()),
                ("data_end", models.DateField()),
                ("kind", models.CharField(max_length=50)),
                ("speed_collision", models.IntegerField()),
                ("angle_collision", models.IntegerField()),
            ],
            options={
                "db_table": "испытание",
            },
        ),
        migrations.CreateModel(
            name="Transport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("kind", models.CharField(max_length=50)),
                ("length", models.IntegerField()),
                ("width", models.IntegerField()),
                ("track", models.IntegerField()),
                ("mass", models.IntegerField()),
                ("load_po", models.FloatField()),
                ("load_zo", models.FloatField()),
                ("height", models.FloatField()),
            ],
            options={
                "db_table": "тс",
            },
        ),
        migrations.CreateModel(
            name="TestParameter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("actual_value", models.FloatField(null=True)),
                (
                    "parameter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="report.parameter",
                    ),
                ),
                (
                    "test",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="report.test"
                    ),
                ),
            ],
            options={
                "db_table": "ИспытаниеПараметр",
            },
        ),
        migrations.AddField(
            model_name="test",
            name="parameter",
            field=models.ManyToManyField(
                related_name="tests",
                through="report.TestParameter",
                to="report.parameter",
            ),
        ),
        migrations.AddField(
            model_name="test",
            name="protocol",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="report.protocol"
            ),
        ),
        migrations.AddField(
            model_name="test",
            name="transport",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="report.transport"
            ),
        ),
        migrations.AddField(
            model_name="parameter",
            name="test",
            field=models.ManyToManyField(
                related_name="parameters",
                through="report.TestParameter",
                to="report.test",
            ),
        ),
        migrations.CreateModel(
            name="Application",
            fields=[
                (
                    "id",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                ("receipt_date", models.DateField()),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="report.customer",
                    ),
                ),
                (
                    "fence",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="report.fence"
                    ),
                ),
            ],
            options={
                "db_table": "заявка",
            },
        ),
    ]
